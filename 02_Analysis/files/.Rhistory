# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
tsne <- Rtsne(final, perplexity= 1, pca = FALSE, is_distance = TRUE)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
tsne <- Rtsne(final, perplexity= 1, pca = FALSE, is_distance = TRUE)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
tsne <- Rtsne(final, perplexity= 1, pca = FALSE, is_distance = TRUE)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
tsne <- Rtsne(final, perplexity= 1,5, pca = FALSE, is_distance = TRUE)
tsne <- Rtsne(final, perplexity= 3, pca = FALSE, is_distance = TRUE)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
tsne <- Rtsne(final, perplexity= 3, pca = FALSE, is_distance = TRUE, dims =3)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
plot(tsne)
plot(cluster)
masein <- data.frame(names = rownames(final),
x = cluster$x[,1],
y = cluster$y[,2],
stringsAsFactors = FALSE)
masein <- data.frame(names = rownames(final),
x = cluster$x,
y = cluster$y,
stringsAsFactors = FALSE)
masein <- data.frame(names = rownames(final),
x = cluster$x,
y = cluster$y,
stringsAsFactors = FALSE)
View(cluster)
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(cluster, aes(x=wt, y=mpg)) + geom_point()
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/01_textreuse_cases")
rownames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
final<-rwmd_glove
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 4, nstart = 27)
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
cluster<-fviz_cluster(k2, data = final)
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
plot(cluster)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
geom_elliple()
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
stat_ellipse()
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
stat_ellipse()
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
stat_ellipse(aes(x = x, y = y))
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
stat_ellipse(aes(x = x, y = y, label = names))
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()+
stat_ellipse(aes(x = x, y = y, label = names), type = "norm")
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 4, nstart = 27)
cluster<-fviz_cluster(k2, data = final)
plot(cluster)
cluster
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/01_textreuse_cases")
rownames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
final<-rwmd_glove
final <- (t(rwmd_glove) + rwmd_glove)/2
#finding k
set.seed(123)
fviz_nbclust(final, kmeans, method = "wss") #elbow method
fviz_nbclust(final, kmeans, method = "silhouette") #silhouette method
gap_stat <- clusGap(final, FUN = kmeans, nstart = 25, #gap stat method
K.max = 24, B = 50)
print(gap_stat, method = "firstmax")
fviz_gap_stat(gap_stat)
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 3, nstart = 27)
cluster<-fviz_cluster(k2, data = final)
plot(cluster)
cluster
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 3, nstart = 27)
cluster<-fviz_cluster(k2, data = final)
plot(cluster)
cluster
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/01_textreuse_cases")
rownames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
final<-rwmd_glove
#finding k
set.seed(123)
fviz_nbclust(final, kmeans, method = "wss") #elbow method
fviz_nbclust(final, kmeans, method = "silhouette") #silhouette method
gap_stat <- clusGap(final, FUN = kmeans, nstart = 25, #gap stat method
K.max = 24, B = 50)
print(gap_stat, method = "firstmax")
fviz_gap_stat(gap_stat)
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 3, nstart = 27)
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 4, nstart = 27)
cluster<-fviz_cluster(k2, data = final)
plot(cluster)
cluster
masein <- data.frame(names = rownames(final),
x = cluster[["data"]][["x"]],
y = cluster[["data"]][["y"]],
stringsAsFactors = FALSE)
ggplot(masein, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=4) +
geom_text_repel()
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/01_textreuse_cases")
library(ggplot2)
library(RColorBrewer)
rownames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(rwmd_glove) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "EUcomm2", "EUcomm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
final <- (t(rwmd_glove) + rwmd_glove)/2
save(final, file="final")
###visualization###
heatmap <- heatmap(final, Rowv=NA, Colv=NA, col = heat.colors(256), scale="column", margins=c(5,10))
legend(x="bottomright", legend=c("similar", "dissimilar"),
fill=colorRampPalette(brewer.pal(8, "Spectral"))(3))
#basic statistics
max(as.numeric(unlist(final)))
median(as.numeric(unlist(final)))
min(as.numeric(unlist(final)))
mean(as.numeric(unlist(final)))
boxplot(as.numeric(unlist(final)))
#filter out most/least similar cases
library(dplyr)
list<-rwmd_glove %>%
as.table() %>% as.data.frame() %>%
subset(Var1 != Var2 & abs(Freq)<0.5) %>% # omit diagonal and keep significant correlations (optional...)
filter(!duplicated(paste0(pmax(as.character(Var1), as.character(Var2)), pmin(as.character(Var1), as.character(Var2))))) %>% # keep only unique occurrences, as.character because Var1 and Var2 are factors
arrange(Freq)
# use a Barnes-Hut t-Distributed Stochastic Neighbor Embedding algorithm to reduce the dimensionality to 2
#dimensions so that we can plot submissions against eachother:
library(Rtsne)
library(ggplot2)
library(ggrepel)
# Set seed:
set.seed(12345)
?Rtsne
# Generate the 2-dimenstional reduced embeddings:
?Rtsne
tsne <- Rtsne(final, perplexity= 3, pca = FALSE, is_distance = TRUE, dims =3)
# take the results and put them in a data frame for easy plotting:
results <- data.frame(names = rownames(final),
x = tsne$Y[,1],
y = tsne$Y[,2],
stringsAsFactors = FALSE)
ggplot(results, aes(x = x, y = y, label = names)) +
geom_point(color=custom.col, size=6) +
geom_text_repel()
# Compute k-means clustering with k = 2
k2 <- kmeans(final, centers = 4, nstart = 27)
cluster<-fviz_cluster(k2, data = final)
plot(cluster)
cluster
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel()
library(ggplot2)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel()
path_data <- "/Users/kathrindietrich/Desktop/041620MasterThesis/03_Data/EU_Data/Texts/Final"
files <- list.files(path = ".", recursive = TRUE,
pattern = "\\*",
full.names = TRUE)
data <- readtext(paste0(path_data, files))
corpus<-corpus(data)
tokens<-tokens(corpus,
what = "word",
remove_numbers = TRUE,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_separators = TRUE)
tokens <- tokens %>%
tokens_tolower() %>%
tokens_remove(stopwords()) %>%
tokens_keep(min_nchar = 3)  #%>%
featnames(dfm(tokens))
#dfmstem <-dfm(tokens, tolower = FALSE)
dfm<-dfm(tokens, tolower = FALSE)
tm<-textmodel_wordfish(dfm, dir = c(19,20))
tm$theta
wf<-dist(tm$theta, upper = TRUE, diag = TRUE)
wf<-as.matrix(wf)
wf<-as.data.frame(as.matrix(wf))
colnames(wf) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rownames(wf) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
wf <- wf[-c(19:20), -c(1:18, 21:27)] # delete all columns apart from the commission statements, delete commission statements in the rows
#prep for merge with text reuse file
wf["name"] <- NA #create new column
wf$name <- c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(wf)[2] <- "wf_comm1"
colnames(wf)[1] <- "wf_comm2"
#prep glove file for merge
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
rwmd<-as.data.frame(rwmd_glove)
rwmd<-(t(rwmd) + rwmd)/2
colnames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rownames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rwmd <- rwmd[-c(19:20), -c(1:18, 21:27)] # delete columns apart from commisssion
name <- rownames(rwmd)
rownames(rwmd) <- NULL
rwmd <- cbind(name,rwmd)
colnames(rwmd)[2] <- "rwmd_comm2"
colnames(rwmd)[3] <- "rwmd_comm1"
#merge
object <- merge(rwmd, wf, by="name")  #convert names into rowlabels
rownames(object) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
#prep data for WF
library(readtext)
library(quanteda.textmodels)
library(quanteda)
library(ggplot2)
path_data <- "/Users/kathrindietrich/Desktop/041620MasterThesis/03_Data/EU_Data/Texts/Final"
files <- list.files(path = ".", recursive = TRUE,
pattern = "\\*",
full.names = TRUE)
data <- readtext(paste0(path_data, files))
corpus<-corpus(data)
tokens<-tokens(corpus,
what = "word",
remove_numbers = TRUE,
remove_punct = TRUE,
remove_symbols = TRUE,
remove_url = TRUE,
remove_separators = TRUE)
tokens <- tokens %>%
tokens_tolower() %>%
tokens_remove(stopwords()) %>%
tokens_keep(min_nchar = 3)  #%>%
featnames(dfm(tokens))
#dfmstem <-dfm(tokens, tolower = FALSE)
dfm<-dfm(tokens, tolower = FALSE)
tm<-textmodel_wordfish(dfm, dir = c(19,20))
tm$theta
wf<-dist(tm$theta, upper = TRUE, diag = TRUE)
wf<-as.matrix(wf)
wf<-as.data.frame(as.matrix(wf))
colnames(wf) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rownames(wf) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
wf <- wf[-c(19:20), -c(1:18, 21:27)] # delete all columns apart from the commission statements, delete commission statements in the rows
#prep for merge with text reuse file
wf["name"] <- NA #create new column
wf$name <- c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
colnames(wf)[2] <- "wf_comm1"
colnames(wf)[1] <- "wf_comm2"
#prep glove file for merge
setwd("/Users/kathrindietrich/Desktop/041620MasterThesis/02_Analysis/files")
load("rwmd_glove")
rwmd<-as.data.frame(rwmd_glove)
rwmd<-(t(rwmd) + rwmd)/2
colnames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rownames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rwmd <- rwmd[-c(19:20), -c(1:18, 21:27)] # delete columns apart from commisssion
name <- rownames(rwmd)
rownames(rwmd) <- NULL
rwmd <- cbind(name,rwmd)
colnames(rwmd)[2] <- "rwmd_comm2"
colnames(rwmd)[3] <- "rwmd_comm1"
#merge
object <- merge(rwmd, wf, by="name")  #convert names into rowlabels
rownames(object) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
object <- object[, -c(1)]
col_order <- c("rwmd_comm1", "rwmd_comm2", "wf_comm1", "wf_comm2")
mergedobject <- object[, col_order]
#normalize/standardize
#z-scores
z_scores<-scale(mergedobject, center = TRUE, scale = TRUE)
is(z_scores)
z_scores<-as.data.frame(z_scores)
#plot communication 1
library(ggplot2)
ggplot(z_scores, aes(x=wf_comm1, y=rwmd_comm1)) +
geom_point(colour = "#1380A1", size = 3) +
geom_abline(intercept = 0, slope = 1)+
geom_text(label=rownames(z_scores)) +
labs(#title="Comparison WF and Text Reuse",
# subtitle = "Policy Draft",
x="Wordfish", y = "Text Reuse")
#plot communication 2
ggplot(z_scores, aes(x=wf_comm2, y=rwmd_comm2)) +
geom_point(colour = "#1380A1", size = 3) +
geom_abline(intercept = 0, slope = 1)+
geom_text(label=rownames(z_scores)) +
labs(#title="Comparison WF and Text Reuse",
#subtitle = "Final Legislation",
x="Wordfish", y = "Text Reuse")
cor(c(as.matrix(z_scores$rwmd_comm1)), c(as.matrix(z_scores$wf_comm1)), method = "pearson")
cor(c(as.matrix(z_scores$rwmd_comm2)), c(as.matrix(z_scores$wf_comm2)), method = "pearson")
#do they move in the same direction?
#library(dplyr)
will<-z_scores %>%
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
cor(will$diff_rwmd, will$diff_wf)
#do they move in the same direction?
#library(dplyr)
will<-z_scores %>%
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
#do they move in the same direction?
library(dplyr)
will<-z_scores %>%
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
cor(will$diff_rwmd, will$diff_wf)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel()
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel() +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
library(ggrepel)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel() +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel(label =rownames(z_scores)) +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
will<-mergedobject %>%
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
cor(will$diff_rwmd, will$diff_wf)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel(label =rownames(z_scores)) +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
load("rwmd_glove")
rwmd<-as.data.frame(rwmd_glove)
colnames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rownames(rwmd) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "comm2", "comm1", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
rwmd <- rwmd[-c(19:20), -c(1:18, 21:27)] # delete columns apart from commisssion
name <- rownames(rwmd)
rownames(rwmd) <- NULL
rwmd <- cbind(name,rwmd)
colnames(rwmd)[2] <- "rwmd_comm2"
colnames(rwmd)[3] <- "rwmd_comm1"
#merge
object <- merge(rwmd, wf, by="name")  #convert names into rowlabels
rownames(object) = c("acea", "adts", "aegpl", "avele", "avere", "beuc", "bvrla", "ebb", "engva", "etrma", "etsc", "etuc", "faep", "fanc", "foe_uk", "greenpeace", "jama", "kama", "rai", "rspb", "smmt", "t_and_e", "uk_aa", "vda", "wwf")
object <- object[, -c(1)]
col_order <- c("rwmd_comm1", "rwmd_comm2", "wf_comm1", "wf_comm2")
mergedobject <- object[, col_order]
#normalize/standardize
#z-scores
z_scores<-scale(mergedobject, center = TRUE, scale = TRUE)
is(z_scores)
z_scores<-as.data.frame(z_scores)
#plot communication 1
library(ggplot2)
ggplot(z_scores, aes(x=wf_comm1, y=rwmd_comm1)) +
geom_point(colour = "#1380A1", size = 3) +
geom_abline(intercept = 0, slope = 1)+
geom_text(label=rownames(z_scores)) +
labs(#title="Comparison WF and Text Reuse",
# subtitle = "Policy Draft",
x="Wordfish", y = "Text Reuse")
#plot communication 2
ggplot(z_scores, aes(x=wf_comm2, y=rwmd_comm2)) +
geom_point(colour = "#1380A1", size = 3) +
geom_abline(intercept = 0, slope = 1)+
geom_text(label=rownames(z_scores)) +
labs(#title="Comparison WF and Text Reuse",
#subtitle = "Final Legislation",
x="Wordfish", y = "Text Reuse")
cor(c(as.matrix(z_scores$rwmd_comm1)), c(as.matrix(z_scores$wf_comm1)), method = "pearson")
cor(c(as.matrix(z_scores$rwmd_comm2)), c(as.matrix(z_scores$wf_comm2)), method = "pearson")
#do they move in the same direction?
library(dplyr)
will<-mergedobject %>% #change to z-scores to unscale
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
cor(will$diff_rwmd, will$diff_wf)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel(label =rownames(z_scores)) +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
will<-z_scores %>% #change to z-scores to unscale
mutate(diff_rwmd = rwmd_comm1 - rwmd_comm2) %>%
mutate(diff_wf = wf_comm1 - wf_comm2)
cor(will$diff_rwmd, will$diff_wf)
ggplot(will, aes(x=diff_rwmd, y=diff_wf)) +
geom_point(colour = "#1380A1", size = 3) +
geom_text(label=rownames(z_scores)) +
geom_text_repel(label =rownames(z_scores)) +
geom_abline(intercept = 0, slope = 1)+
labs(#title="Comparison WF and Text Reuse",subtitle = "",
x="Text Reuse", y = "Wordfish")
